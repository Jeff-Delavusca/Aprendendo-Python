# -*- coding: utf-8 -*-
"""aprendendo_pandas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PTSWEY-ZC54_aPlA7tGW6Pe9N_zqZXYF

# **Importando o pandas**
"""

import pandas as pd

"""# **Criando um dataframe a partir de um dicionário**"""

dataframe = pd.DataFrame()
venda = {'data': ['15/02/2021', '16/02/2021'],
         'valor': [500, 300],
         'produto': ['feijao', 'arroz'],
         'qtde': [50, 70],
         }
tabela_venda = pd.DataFrame(venda)

"""# **Visualização dos Dados**"""

print(tabela_venda)

display(tabela_venda)

"""# **Importando dados**"""

tabela_vendas = pd.read_excel("/content/Vendas.xlsx")
display(tabela_vendas)



"""# **Resumos de visualização**"""

display(tabela_vendas.head(10))
print(tabela_vendas.shape)
display(tabela_vendas[["Quantidade", "Valor Unitário", "Valor Final"]].describe())

"""# **Pegar 1 coluna (e os pd.Series)**"""

produtos = tabela_vendas[["Produto", "ID Loja"]]
display(produtos)

"""# **.loc, um método muito importante**


*   Pegar 1 linha
*   Pegar linhas de acordo com alguma condição
* Pegar linhas e colunas específicas
* Pegar 1 valor específico


"""

# pegar um ou mais linhas
# display(tabela_vendas.loc[1:5])

# pegar linhas que correspondem a uma condição
# tabela_vendas_norteshopping = tabela_vendas.loc[tabela_vendas["ID Loja"] == "Norte Shopping"]

# pegar várias linhas e colunas usando o loc
# tabela_vendas_norteshopping = tabela_vendas.loc[tabela_vendas["ID Loja"] == "Norte Shopping", ["ID Loja", "Produto", "Quantidade"]]
# display(tabela_vendas_norteshopping)

# Pegar 1 valor específico
# print(tabela_vendas.loc[1, 'Produto'])

"""# **Adicionar 1 coluna**"""

# a partir de uma coluna que existe
# tabela_vendas["Comissão"] = tabela_vendas["Valor Final"] * 0.05
# display(tabela_vendas)

# criar uma coluna com valor padrão
tabela_vendas.loc[:,'Imposto'] = 0
display(tabela_vendas)

"""# **Adicionar 1 linha**"""

tabela_vendas_dez = pd.read_excel("/content/Vendas - Dez.xlsx")
#display(tabela_vendas_dez)

tabela_vendas = pd.concat([tabela_vendas, tabela_vendas_dez])
display(tabela_vendas)

"""# **Excluir linhas e colunas**"""

tabela_vendas = tabela_vendas.drop(0, axis=0)
display(tabela_vendas)

"""# **Valores vazios**


*   Deletar linhas/colunas vazias
*   Deletar linhas que possuem valores vazios
*   Preencher valores vazios (média e último valor


"""

# deletar linhas e colunas completamente vazias
# tabela_vendas = tabela_vendas.dropna(how='all', axis=1)
# display(tabela_vendas)

# deletar linhas que possuem pelo menos 1 valor vazio
# tabela_vendas = tabela_vendas.dropna()

# preencher valores vazios
# preencher com a média da coluna
# tabela_vendas['Comissão'] = tabela_vendas['Comissão'].fillna(tabela_vendas['Comissão'].mean())
# display(tabela_vendas)

# preencher com o último valor
tabela_vendas = tabela_vendas.ffill()
display(tabela_vendas)

"""# **Calcular indicadores**


*   Groupby
*   Value counts


"""

# value counts
# transacoes_por_loja = tabela_vendas['ID Loja'].value_counts()
# display(transacoes_por_loja)

# group by
faturamento_por_produto = tabela_vendas.groupby('Produto')[[ 'Valor Final']].mean()
display(faturamento_por_produto)

"""# **Mesclar 2 dataframes (Procurar informações de um dataframe em outro)**"""

tabela_gerente = pd.read_excel("/content/Gerentes.xlsx")
# display(tabela_geretnes)

tabela_vendas = tabela_vendas.merge(tabela_gerente)
display(tabela_vendas)